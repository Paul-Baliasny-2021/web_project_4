!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var n,r;return n=t,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n}var t,r;return t=e,(r=[{key:"_showError",value:function(e){var t=this._settings,n=t.inputErrorClass,r=t.errorClass,o=this._formElement.querySelector("#".concat(e.id,"-error"));o.textContent=e.validationMessage,e.classList.add(n),o.classList.add(r)}},{key:"_hideError",value:function(e){this._formElement.querySelector("#".concat(e.id,"-error")).textContent="",e.classList.remove(this._settings.inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)).forEach((function(t){e._hideError(t)}));var t=this._formElement.querySelector(this._settings.submitButtonSelector);t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0}},{key:"enableValidation",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){return e.preventDefault()}));var t=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),n=this._formElement.querySelector(this._settings.submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r,e._settings),e._toggleButtonState(t,n,e._settings)}))}))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n){var r=this,o=t.data,a=t.handleCardClick,u=t.handleDeleteCard,c=t.handleLikeButton;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_setEventListeners",(function(){r._place.querySelector(".place__image").addEventListener("click",(function(){return r._handleCardClick(r._name,r._link)})),r._place.querySelector(".place__delete").addEventListener("click",(function(){return r._handleDeleteCard(r._id)})),r._place.querySelector(".place__like").addEventListener("click",(function(){return r._handleLikeButton(r._id)}))})),i(this,"removeCard",(function(){r._place.remove()})),i(this,"createCardElement",(function(){r._place=r._templatePlace.cloneNode(!0);var e=r._place.querySelector(".place__title"),t=r._place.querySelector(".place__image");return e.textContent=r._name,t.style.backgroundImage="url(".concat(r._link,")"),r._setEventListeners(),r._ownerId!==r._userId&&(r._place.querySelector(".place__delete").style.visibility="hidden"),r._place.querySelector(".place__like-counter").textContent=r._likes.length,r.isLiked()&&r.activateLike(r._likes),r._place})),this._name=o.name,this._link=o.link,this._id=o._id,this._likes=o.likes,this._ownerId=o.owner._id,this._handleCardClick=a,this._handleDeleteCard=u,this._handleLikeButton=c,this._userId=n,this._templatePlace=document.querySelector("#place-template").content.querySelector(".place")}var t,n;return t=e,(n=[{key:"activateLike",value:function(e){this._likes=e,this._place.querySelector(".place__like-counter").textContent=this._likes.length,this._place.querySelector(".place__like").classList.toggle("place__like_active")}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}}])&&o(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),c(this,"_closePopupOnRemoteClick",(function(e){e.target.classList.contains("popup")&&(n.close(),e.stopPropagation())})),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_active"),document.addEventListener("keyup",this._handleEscClose),this._popupElement.addEventListener("click",this._closePopupOnRemoteClick)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_active"),document.removeEventListener("keyup",this._handleEscClose),this._popupElement.removeEventListener("click",this._closePopupOnRemoteClick)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__closer").addEventListener("click",(function(){return e.close()}))}}])&&u(t.prototype,n),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return d(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e,t,n){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},y(e,t,n||e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=_(t);if(n){var o=_(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return p(this,e)});function o(e){var t,n,i,a,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),u=function(e,r){var i=n._popupElement.querySelector(".popup__image"),a=n._popupElement.querySelector(".popup__image-title");i.src=r,i.alt=e,a.textContent=e,y((t=d(n),_(o.prototype)),"open",t).call(t)},(a="open")in(i=d(n=r.call(this,e)))?Object.defineProperty(i,a,{value:u,enumerable:!0,configurable:!0,writable:!0}):i.open=u,n}return o}(l);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},g(e,t,n||e)}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function k(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return E(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){n._submitButton.textContent=e?"Save":"Saving..."},(o="_renderSaving")in(r=E(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._handleFormSubmit=t,n._form=n._popupElement.querySelector(".popup__form"),n._submitButton=n._popupElement.querySelector(".popup__submit"),n}return t=a,(n=[{key:"_resetRenderSaving",value:function(){this._submitButton.textContent="Save"}},{key:"_getInputValues",value:function(){var e,t=this;return this._inputs=function(e){if(Array.isArray(e))return m(e)}(e=this._form.querySelectorAll(".popup__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return m(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._inputValues={},this._inputs.forEach((function(e){t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e._renderSaving()})),g(w(a.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(){this._resetRenderSaving(),g(w(a.prototype),"open",this).call(this)}},{key:"close",value:function(){this._form.reset(),g(w(a.prototype),"close",this).call(this)}}])&&b(t.prototype,n),a}(l);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){var n=t.userNameSelector,r=t.userJobSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(n),this._profileJob=document.querySelector(r),this._profileImage=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{nameValue:this._profileName.textContent,jobValue:this._profileJob.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.profession,r=e.avatar;this._profileName.textContent=t,this._profileJob.textContent=n,this._profileImage.src=r}}])&&O(t.prototype,n),e}(),L=document.querySelector(".popup_type_picture"),q=(L.querySelector(".popup__image"),L.querySelector(".popup__image-title"),document.querySelector(".profile__edit-button")),P=document.querySelector(".profile__add-button"),I=document.querySelector(".profile__avatar-container"),R=(document.querySelector("#place-template").content.querySelector(".place"),document.querySelector(".popup__input_text_toponym"),document.querySelector(".popup__input_text_link"),document.querySelector(".popup__input_text_name")),A=document.querySelector(".popup__input_text_profession"),x=(document.querySelector(".profile__name"),document.querySelector(".profile__about"),document.querySelector(".popup__form")),U=document.querySelector(".popup__form_type_add"),B=U.querySelector(".popup__submit"),T=document.querySelector(".popup__form_type_avatar"),V=(document.querySelector(".place__delete"),{inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_theme_error",errorClass:"popup__error-message"}),D=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){return console.log(e)}))};function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return D("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return D("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){var t=e.name,n=e.profession;return D("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:n})})}},{key:"uploadUserAvatar",value:function(e){return D("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"postNewCard",value:function(e){return D("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return D("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(e){return D("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"dislikeCard",value:function(e){return D("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}])&&N(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"c1d6862e-d39d-4724-bab0-a07d7562f2a3","Content-Type":"application/json"}});function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function M(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Y(e,t,n){return Y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},Y(e,t,n||e)}function $(e,t){return $=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},$(e,t)}function z(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return G(e)}function G(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}function Q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var W=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&$(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return z(this,e)});function a(){var e;M(this,a);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Q(G(e=i.call.apply(i,[this].concat(n))),"_renderSaving",(function(t){e._submitButton.textContent=t?"Yes":"Saving..."})),e}return t=a,(n=[{key:"setAction",value:function(e){this._handleFormSubmit=e}},{key:"_resetRenderSaving",value:function(){this._submitButton.textContent="Yes"}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit()})),Y(K(a.prototype),"setEventListeners",this).call(this)}}])&&H(t.prototype,n),a}(C);function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Z=new W(".popup_type_sure");Z.setEventListeners();var ee,te=new h(".popup_type_picture");te.setEventListeners(),Promise.all([J.getInitialCards(),J.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ee=i._id,ne.renderItems(o),re.setUserInfo({name:i.name,profession:i.about,avatar:i.avatar})}));var ne=new t({renderer:function(e){ae(e)}},".places"),re=new j({userNameSelector:".profile__name",userJobSelector:".profile__about",userAvatarSelector:".profile__image"}),oe=new C(".popup_type_edit",(function(e){J.editUserInfo(e).then((function(e){re.setUserInfo(e),oe.close()}))}));oe.setEventListeners(),q.addEventListener("click",(function(){var e=re.getUserInfo();oe.open(),ce.resetValidation(),R.value=e.nameValue,A.value=e.jobValue}));var ie=new C(".popup_type_avatar",(function(e){J.uploadUserAvatar(e).then((function(e){re.setUserInfo(e),ie.close()}))}));function ae(e){var t=new a({data:e,handleCardClick:function(e,t){te.open(e,t)},handleDeleteCard:function(e){Z.open(),Z.setAction((function(){J.deleteCard(e).then((function(e){t.removeCard(),Z.close()}))}))},handleLikeButton:function(e){t.isLiked()?J.dislikeCard(e).then((function(e){t.activateLike(e.likes)})):J.likeCard(e).then((function(e){t.activateLike(e.likes)}))}},ee),n=t.createCardElement();ne.addItem(n)}ie.setEventListeners(),I.addEventListener("click",(function(){ie.open(),se.resetValidation()}));var ue=new C(".popup_type_add",(function(e){J.postNewCard(e).then((function(e){ae(e),ue.close()}))}));P.addEventListener("click",(function(){ue.open(),le.resetValidation(),B.textContent="Create"})),ue.setEventListeners();var ce=new r(V,x),le=new r(V,U),se=new r(V,T);ce.enableValidation(),le.enableValidation(),se.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,